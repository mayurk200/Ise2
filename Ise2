#include <stdio.h>

// Function to check if a year is a leap year
int isLeapYear(int year) {
    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0))
        return 1;
    return 0;
}

// Function to get the number of days in a month
int getDaysInMonth(int month, int year) {
    if (month == 2) // February
        return isLeapYear(year) ? 29 : 28;
    else if (month == 4 || month == 6 || month == 9 || month == 11) // April, June, September, November
        return 30;
    else
        return 31;
}

// Function to calculate the day of the week for the 1st day of a month
int getStartDay(int month, int year) {
    int day = 1, y = year, m = month;
    if (m < 3) {
        m += 12;
        y -= 1;
    }
    int k = y % 100;
    int j = y / 100;
    return (day + 13 * (m + 1) / 5 + k + k / 4 + j / 4 + 5 * j) % 7;
}

// Function to display the calendar for a given month and year
void displayCalendar(int month, int year) {
    const char *months[] = {
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    };
    const char *days[] = { "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" };

    printf("\n   %s %d\n", months[month - 1], year);
    for (int i = 0; i < 7; i++) {
        printf("%s ", days[i]);
    }
    printf("\n");

    int startDay = getStartDay(month, year);
    int daysInMonth = getDaysInMonth(month, year);

    for (int i = 0; i < startDay; i++) {
        printf("    ");
    }

    for (int day = 1; day <= daysInMonth; day++) {
        printf("%3d ", day);
        if ((startDay + day) % 7 == 0)
            printf("\n");
    }
    printf("\n");
}

// Main function
int main() {
    int month, year;

    printf("Enter the year: ");
    scanf("%d", &year);

    printf("Enter the month (1-12): ");
    scanf("%d", &month);

    if (month < 1 || month > 12) {
        printf("Invalid month! Please enter a value between 1 and 12.\n");
    } else {
        displayCalendar(month, year);
    }

    return 0;
}
